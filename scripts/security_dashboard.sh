#!/bin/bash

# üìä Dashboard de Seguran√ßa ORDM Blockchain

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üìä DASHBOARD DE SEGURAN√áA ORDM BLOCKCHAIN${NC}"
echo "=============================================="
echo ""

# 1. Status da FASE 1
echo -e "${YELLOW}üîê FASE 1: Corre√ß√µes Cr√≠ticas${NC}"
echo "----------------------------------------"
if [ -f "pkg/security/validation.go" ]; then
    echo -e "${GREEN}‚úÖ Valida√ß√£o robusta implementada${NC}"
else
    echo -e "${RED}‚ùå Valida√ß√£o robusta n√£o implementada${NC}"
fi

if [ -f "pkg/security/secure_logger.go" ]; then
    echo -e "${GREEN}‚úÖ Logs seguros implementados${NC}"
else
    echo -e "${RED}‚ùå Logs seguros n√£o implementados${NC}"
fi

if [ -f ".env" ]; then
    echo -e "${GREEN}‚úÖ Vari√°veis de ambiente configuradas${NC}"
else
    echo -e "${RED}‚ùå Vari√°veis de ambiente n√£o configuradas${NC}"
fi

echo ""

# 2. Status da FASE 2
echo -e "${YELLOW}üõ°Ô∏è FASE 2: Melhorias Avan√ßadas${NC}"
echo "----------------------------------------"
if [ -f "pkg/security/two_factor.go" ]; then
    echo -e "${GREEN}‚úÖ 2FA implementado${NC}"
else
    echo -e "${RED}‚ùå 2FA n√£o implementado${NC}"
fi

if [ -f "pkg/security/csrf.go" ]; then
    echo -e "${GREEN}‚úÖ Prote√ß√£o CSRF implementada${NC}"
else
    echo -e "${RED}‚ùå Prote√ß√£o CSRF n√£o implementada${NC}"
fi

if [ -f "pkg/security/audit_logger.go" ]; then
    echo -e "${GREEN}‚úÖ Audit logging implementado${NC}"
else
    echo -e "${RED}‚ùå Audit logging n√£o implementado${NC}"
fi

if [ -f "pkg/security/ids_monitor.go" ]; then
    echo -e "${GREEN}‚úÖ IDS/IPS implementado${NC}"
else
    echo -e "${RED}‚ùå IDS/IPS n√£o implementado${NC}"
fi

echo ""

# 3. Status dos logs
echo -e "${YELLOW}üìÅ Status dos Logs${NC}"
echo "------------------------"
if [ -d "logs/secure" ]; then
    echo -e "${GREEN}‚úÖ Diret√≥rio de logs seguros existe${NC}"
else
    echo -e "${RED}‚ùå Diret√≥rio de logs seguros n√£o existe${NC}"
fi

if [ -d "logs/audit" ]; then
    echo -e "${GREEN}‚úÖ Diret√≥rio de audit logs existe${NC}"
else
    echo -e "${RED}‚ùå Diret√≥rio de audit logs n√£o existe${NC}"
fi

if [ -d "logs/ids" ]; then
    echo -e "${GREEN}‚úÖ Diret√≥rio de IDS logs existe${NC}"
else
    echo -e "${RED}‚ùå Diret√≥rio de IDS logs n√£o existe${NC}"
fi

echo ""

# 4. Status da compila√ß√£o
echo -e "${YELLOW}üî® Status da Compila√ß√£o${NC}"
echo "----------------------------"
if [ -f "ordmd" ]; then
    echo -e "${GREEN}‚úÖ Execut√°vel ordmd existe${NC}"
    ls -la ordmd
else
    echo -e "${RED}‚ùå Execut√°vel ordmd n√£o existe${NC}"
fi

echo ""

# 5. Score de seguran√ßa
echo -e "${YELLOW}üìä SCORE DE SEGURAN√áA${NC}"
echo "------------------------"
PHASE1_SCORE=0
PHASE2_SCORE=0

# Calcular score FASE 1
if [ -f "pkg/security/validation.go" ]; then
    PHASE1_SCORE=$((PHASE1_SCORE + 30))
fi
if [ -f "pkg/security/secure_logger.go" ]; then
    PHASE1_SCORE=$((PHASE1_SCORE + 30))
fi
if [ -f ".env" ]; then
    PHASE1_SCORE=$((PHASE1_SCORE + 40))
fi

# Calcular score FASE 2
if [ -f "pkg/security/two_factor.go" ]; then
    PHASE2_SCORE=$((PHASE2_SCORE + 25))
fi
if [ -f "pkg/security/csrf.go" ]; then
    PHASE2_SCORE=$((PHASE2_SCORE + 25))
fi
if [ -f "pkg/security/audit_logger.go" ]; then
    PHASE2_SCORE=$((PHASE2_SCORE + 25))
fi
if [ -f "pkg/security/ids_monitor.go" ]; then
    PHASE2_SCORE=$((PHASE2_SCORE + 25))
fi

TOTAL_SCORE=$((PHASE1_SCORE + PHASE2_SCORE))

echo -e "FASE 1: ${PHASE1_SCORE}/100 pontos"
echo -e "FASE 2: ${PHASE2_SCORE}/100 pontos"
echo -e "TOTAL: ${TOTAL_SCORE}/200 pontos"

if [ $TOTAL_SCORE -ge 180 ]; then
    echo -e "${GREEN}üéâ SEGURAN√áA EXCELENTE (95%+)${NC}"
elif [ $TOTAL_SCORE -ge 160 ]; then
    echo -e "${GREEN}‚úÖ SEGURAN√áA MUITO BOA (90%+)${NC}"
elif [ $TOTAL_SCORE -ge 140 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è SEGURAN√áA BOA (80%+)${NC}"
elif [ $TOTAL_SCORE -ge 120 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è SEGURAN√áA REGULAR (70%+)${NC}"
else
    echo -e "${RED}‚ùå SEGURAN√áA INSUFICIENTE (<70%)${NC}"
fi

echo ""
echo -e "${BLUE}üöÄ PR√ìXIMOS PASSOS${NC}"
echo "====================="
if [ $TOTAL_SCORE -ge 180 ]; then
    echo -e "${GREEN}‚úÖ Sistema pronto para produ√ß√£o!${NC}"
    echo -e "${YELLOW}üí° Considere implementar:${NC}"
    echo "   - Monitoramento em tempo real"
    echo "   - Alertas por email/SMS"
    echo "   - Backup autom√°tico de logs"
    echo "   - Relat√≥rios de seguran√ßa"
else
    echo -e "${YELLOW}üîß Implementar melhorias restantes:${NC}"
    if [ $PHASE1_SCORE -lt 100 ]; then
        echo "   - Completar FASE 1"
    fi
    if [ $PHASE2_SCORE -lt 100 ]; then
        echo "   - Completar FASE 2"
    fi
fi

echo ""
