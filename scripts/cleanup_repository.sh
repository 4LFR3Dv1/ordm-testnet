#!/bin/bash

# üßπ Script de Limpeza do Reposit√≥rio ORDM
# Remove arquivos duplicados e desnecess√°rios

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üßπ Iniciando limpeza do reposit√≥rio ORDM...${NC}"
echo ""

# 1. Remover execut√°veis antigos
echo -e "${YELLOW}üì¶ Removendo execut√°veis antigos...${NC}"
rm -f offline_miner
rm -f ordm-offline-miner
rm -f test-build
rm -f web
rm -f test-resilience
echo -e "${GREEN}‚úÖ Execut√°veis antigos removidos${NC}"

# 2. Remover logs antigos
echo -e "${YELLOW}üìã Removendo logs antigos...${NC}"
rm -f *.log
echo -e "${GREEN}‚úÖ Logs antigos removidos${NC}"

# 3. Remover arquivos de teste antigos
echo -e "${YELLOW}üß™ Removendo arquivos de teste antigos...${NC}"
rm -f test_*.sh
rm -f test_*.go
rm -f test_*.json
echo -e "${GREEN}‚úÖ Arquivos de teste antigos removidos${NC}"

# 4. Remover arquivos tempor√°rios
echo -e "${YELLOW}üóëÔ∏è Removendo arquivos tempor√°rios...${NC}"
rm -f .DS_Store
rm -f *.tmp
rm -f *.bak
echo -e "${GREEN}‚úÖ Arquivos tempor√°rios removidos${NC}"

# 5. Verificar execut√°vel integrado
echo -e "${YELLOW}üîç Verificando execut√°vel integrado...${NC}"
if [ -f "./ordmd" ]; then
    echo -e "${GREEN}‚úÖ Execut√°vel integrado 'ordmd' encontrado${NC}"
    ls -la ./ordmd
else
    echo -e "${RED}‚ùå Execut√°vel integrado 'ordmd' n√£o encontrado${NC}"
    echo -e "${YELLOW}üì¶ Compilando execut√°vel integrado...${NC}"
    go build -o ordmd ./cmd/ordmd
    echo -e "${GREEN}‚úÖ Execut√°vel integrado compilado${NC}"
fi

# 6. Verificar arquivos essenciais
echo -e "${YELLOW}üìã Verificando arquivos essenciais...${NC}"
ESSENTIAL_FILES=(
    "cmd/ordmd/main.go"
    "config/testnet.json"
    "genesis/testnet.json"
    "scripts/run-node.sh"
    "TESTNET_README.md"
    "Dockerfile"
    "render.yaml"
)

for file in "${ESSENTIAL_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ $file${NC}"
    else
        echo -e "${RED}‚ùå $file (FALTANDO)${NC}"
    fi
done

# 7. Verificar estrutura de diret√≥rios
echo -e "${YELLOW}üìÅ Verificando estrutura de diret√≥rios...${NC}"
if [ -d "cmd/ordmd" ]; then
    echo -e "${GREEN}‚úÖ cmd/ordmd/ (execut√°vel integrado)${NC}"
else
    echo -e "${RED}‚ùå cmd/ordmd/ (FALTANDO)${NC}"
fi

if [ -d "pkg/crypto" ]; then
    echo -e "${GREEN}‚úÖ pkg/crypto/ (machineID)${NC}"
else
    echo -e "${RED}‚ùå pkg/crypto/ (FALTANDO)${NC}"
fi

if [ -d "config" ]; then
    echo -e "${GREEN}‚úÖ config/ (configura√ß√µes)${NC}"
else
    echo -e "${RED}‚ùå config/ (FALTANDO)${NC}"
fi

if [ -d "genesis" ]; then
    echo -e "${GREEN}‚úÖ genesis/ (bloco genesis)${NC}"
else
    echo -e "${RED}‚ùå genesis/ (FALTANDO)${NC}"
fi

# 8. Testar execut√°vel integrado
echo -e "${YELLOW}üß™ Testando execut√°vel integrado...${NC}"
if [ -f "./ordmd" ]; then
    echo -e "${BLUE}Testando help do execut√°vel...${NC}"
    ./ordmd --help | head -10
    echo -e "${GREEN}‚úÖ Execut√°vel integrado funcionando${NC}"
else
    echo -e "${RED}‚ùå Execut√°vel integrado n√£o encontrado${NC}"
fi

# 9. Resumo final
echo ""
echo -e "${BLUE}üìä RESUMO DA LIMPEZA${NC}"
echo "================================"
echo -e "${GREEN}‚úÖ Execut√°veis antigos removidos${NC}"
echo -e "${GREEN}‚úÖ Logs antigos removidos${NC}"
echo -e "${GREEN}‚úÖ Arquivos de teste antigos removidos${NC}"
echo -e "${GREEN}‚úÖ Arquivos tempor√°rios removidos${NC}"
echo -e "${GREEN}‚úÖ Execut√°vel integrado verificado${NC}"
echo -e "${GREEN}‚úÖ Arquivos essenciais verificados${NC}"
echo -e "${GREEN}‚úÖ Estrutura de diret√≥rios verificada${NC}"
echo ""

# 10. Pr√≥ximos passos
echo -e "${BLUE}üöÄ PR√ìXIMOS PASSOS${NC}"
echo "====================="
echo -e "${YELLOW}1. Testar execut√°vel integrado:${NC}"
echo "   ./ordmd --mode both --miner-threads 2"
echo ""
echo -e "${YELLOW}2. Fazer deploy no Render:${NC}"
echo "   - Commit das mudan√ßas"
echo "   - Push para o reposit√≥rio"
echo "   - Render far√° deploy autom√°tico"
echo ""
echo -e "${YELLOW}3. Verificar deploy:${NC}"
echo "   curl https://ordm-testnet.onrender.com/api/v1/blockchain/info"
echo ""

echo -e "${GREEN}üéâ Limpeza do reposit√≥rio conclu√≠da com sucesso!${NC}"
