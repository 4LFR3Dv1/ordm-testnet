# 游낈 Dockerfile para ORDM Blockchain - Execut치vel Integrado
FROM golang:1.25-alpine AS builder

# Instalar depend칡ncias necess치rias
RUN apk add --no-cache git ca-certificates tzdata

# Definir diret칩rio de trabalho
WORKDIR /app

# Copiar arquivos de depend칡ncias
COPY go.mod go.sum ./

# Baixar depend칡ncias
RUN go mod download

# Copiar c칩digo fonte
COPY . .

# Compilar o execut치vel integrado
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o ordmd ./cmd/ordmd

# Imagem final
FROM alpine:latest

# Instalar ca-certificates para HTTPS
RUN apk --no-cache add ca-certificates tzdata

# Criar usu치rio n칚o-root
RUN addgroup -g 1001 -S blockchain && \
    adduser -u 1001 -S blockchain -G blockchain

# Definir diret칩rio de trabalho
WORKDIR /app

# Copiar apenas o bin치rio compilado
COPY --from=builder /app/ordmd .

# Criar diret칩rio de dados
RUN mkdir -p /app/data && \
    chown -R blockchain:blockchain /app

# Mudar para usu치rio n칚o-root
USER blockchain

# Expor portas necess치rias
EXPOSE 8081 3000

# Vari치veis de ambiente
ENV DATA_DIR=/app/data
ENV PORT=8081
ENV P2P_PORT=3000
ENV ORDM_NETWORK=testnet

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT}/api/v1/blockchain/info || exit 1

# Comando padr칚o
CMD ["./ordmd", "--mode", "both", "--rpc-port", "8081"]
